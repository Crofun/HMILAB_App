
        task = new TimerTask() {

            @Override
            public void run() {
                // TODO Auto-generated method stub
                Message message = new Message();
                message.what = MESSAGE_CHART_UPDATE;
                mHandler.sendMessage(message);
            }

        };







private final BroadcastReceiver UARTStatusChangeReceiver = new BroadcastReceiver() {

        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();

            final Intent mIntent = intent;
           //*********************//
            if (action.equals(UartService.ACTION_GATT_CONNECTED))
            {
            	 runOnUiThread(new Runnable()
                 {
                     public void run()
                     {
                         String currentDateTimeString = DateFormat.getTimeInstance().format(new Date());
                         Log.d(TAG, "UART_CONNECT_MSG");
                         
                         
                         btnConnectDisconnect.setText("Disconnect");
                         Chart_Suspend.setTextColor(RespCo);
                         Saverunner_Suspend.setTextColor(RespCo);
                         Saverunner_Stop.setTextColor(RespCo);
                         loadButton.setTextColor(NoRespCo);
                         edtMessage.setEnabled(true);
                         btnSend.setEnabled(true);
                         ((TextView) findViewById(R.id.deviceName)).setText(mDevice.getName()+ " - ready");
                         listAdapter.add("["+currentDateTimeString+"] Connected to: "+ mDevice.getName());
                         messageListView.smoothScrollToPosition(listAdapter.getCount() - 1);
                         mState = UART_PROFILE_CONNECTED;
                         
                     }
            	 });
            }
           
          //*********************//
            if (action.equals(UartService.ACTION_GATT_DISCONNECTED)) {
            	 runOnUiThread(new Runnable() {
                     public void run() {
                         String currentDateTimeString = DateFormat.getTimeInstance().format(new Date());
                         Log.d(TAG, "UART_DISCONNECT_MSG");
                         //save.shutdown();
                         btnConnectDisconnect.setText("Connect");
                         Chart_Suspend.setTextColor(NoRespCo);
                         Saverunner_Suspend.setTextColor(NoRespCo);
                         Saverunner_Stop.setTextColor(NoRespCo);
                         loadButton.setTextColor(RespCo);
                         edtMessage.setEnabled(false);
                         btnSend.setEnabled(false);
                         ((TextView) findViewById(R.id.deviceName)).setText("Not Connected");
                         listAdapter.add("["+currentDateTimeString+"] Disconnected to: "+ mDevice.getName());
                         mState = UART_PROFILE_DISCONNECTED;
                         mService.close();
                         //setUiState();
                     }
                 });
            }
            
          
          //*********************//
            if (action.equals(UartService.ACTION_GATT_SERVICES_DISCOVERED)) {
             	 mService.enableTXNotification();
            }
          //*********************//
            if (action.equals(UartService.ACTION_DATA_AVAILABLE))
            {

                 final byte[] txValue = intent.getByteArrayExtra(UartService.EXTRA_DATA);


                 for (int i = 0; i < txValue.length; i ++) {
                     mChart.add(count , txValue[i] + channel * 2048, channel);
                     if (channel == 0) {
                         count ++;
                         saveline = "" + System.currentTimeMillis();
                     }
                     saveline = saveline + " " + txValue[i];
                     if (channel == channelnum - 1 && isRecord) {
                         try {
                             saveline = saveline + "\n";
                             Log.d(TAG, "saveline =" + saveline);
                             out.write(saveline.getBytes());
                         } catch (IOException e) {
                             // TODO Auto-generated catch block
                             e.printStackTrace();
                         }
                     }
                     channel = (channel + 1) % channelnum;

                 }

                 runOnUiThread(new Runnable() {
                     public void run() {
                         try {
                         	String text = new String(txValue, "UTF-8");
                         	String currentDateTimeString = DateFormat.getTimeInstance().format(new Date());
                        	 	listAdapter.add("["+currentDateTimeString+"] RX: "+text);
                        	 	messageListView.smoothScrollToPosition(listAdapter.getCount() - 1);
                        	
                         } catch (Exception e) {
                             Log.e(TAG, e.toString());
                         }
                     }
                 });
             }
           //*********************//
            if (action.equals(UartService.DEVICE_DOES_NOT_SUPPORT_UART)){
            	showMessage("Device doesn't support UART. Disconnecting");
                btnConnectDisconnect.setText("Connect");
                Chart_Suspend.setTextColor(NoRespCo);
                Saverunner_Suspend.setTextColor(NoRespCo);
                Saverunner_Stop.setTextColor(NoRespCo);
                loadButton.setTextColor(RespCo);
            	mService.disconnect();
            }
            
            
        }
    };
